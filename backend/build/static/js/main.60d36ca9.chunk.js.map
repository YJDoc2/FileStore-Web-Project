{"version":3,"sources":["components/Context.js","components/Header.js","components/SignupForm.js","components/LoginForm.js","components/LoginSignup.js","components/Image.js","components/Card.js","components/CardView.js","components/UserPage.js","components/Home.js","components/UnsupportedFiletype.js","components/FileView.js","components/CollectionCard.js","components/CollectionPage.js","components/CollectionView.js","components/404ErrorPage.js","components/RootRouter.js","App.js","serviceWorker.js","index.js"],"names":["GlobalContext","createContext","Provider","Consumer","Header","loginLink","className","style","fontSize","to","logoutLink","onClick","context","logout","collectionLink","backgroundColor","state","isLoggedIn","user","username","Component","contextType","protoTypes","loggedIn","PropTypes","bool","isRequired","handleLogout","func","SignupForm","props","handleChange","e","setState","target","name","value","handleSubmit","setUser","a","async","preventDefault","info","trim","password1","password2","err","axios","post","password","res","data","history","push","response","message","errMsg","this","Fragment","onSubmit","type","onChange","withRouter","LoginForm","LoginSignup","Image","source","get","path","responseType","then","base64","btoa","Uint8Array","reduce","byte","String","fromCharCode","catch","console","log","classname","thumbnail","height","src","alt","Card","deleteFile","file","getSizeText","size","Math","ceil","ext","dbfilename","originalname","Date","date","toDateString","width","pathname","download","collection","CardView","files","map","key","UserPage","fileAddHandler","totalSize","x","length","usedSpace","errStr","input","submitFiles","FormData","append","$","ajax","url","xhrFields","withCredentials","contentType","processData","cache","success","now","addFiles","setTimeout","error","responseJSON","inputForm","multiple","formEncType","id","aria-describedby","htmlFor","bsCustomFileInput","init","display","Home","staticText","href","UnsupportedFileType","fileType","FileView","staticComponents","goBack","filename","match","params","location","img","extname","toLowerCase","substring","test","Axios","lines","split","text","readOnly","rows","resize","border","fView","filePath","unsupportedComponent","some","CollectionCard","deleteCollection","colls","collections","sampleElem","num","filter","coll","CollectionPage","addCollection","cols","Set","forEach","add","Array","from","CollectionView","createrName","noColl","creater","collName","ErrorPage","RootRouter","delete","undefined","defaults","exact","component","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60d36ca9.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst GlobalContext = createContext();\nconst { Provider, Consumer } = GlobalContext;\n\nexport { GlobalContext, Provider, Consumer };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Consumer, GlobalContext } from './Context';\n\nclass Header extends Component {\n    loginLink = (\n        <Link\n            className='nav-item nav-link ml-auto'\n            style={{ fontSize: '1.5rem' }}\n            to='/login'\n        >\n            Login/Signup\n        </Link>\n    );\n    logoutLink = (\n        <Link\n            className='nav-item nav-link ml-auto'\n            to='/'\n            style={{ fontSize: '1.5rem' }}\n            onClick={this.context.logout}\n        >\n            Logout\n        </Link>\n    );\n    collectionLink = (\n        <Link\n            to='/collections'\n            className='nav-item nav-link ml-auto'\n            style={{ fontSize: '1.5rem' }}\n        >\n            Collections\n        </Link>\n    );\n\n    render() {\n        return (\n            <Consumer>\n                {context => (\n                    <nav\n                        className='navbar navbar-expand-lg navbar-light d-flex'\n                        style={{ backgroundColor: '#e3f2fd' }}\n                    >\n                        <Link\n                            className='navbar-brand '\n                            style={{ fontSize: '2rem' }}\n                            to='/'\n                        >\n                            FileStore\n                        </Link>\n                        {context.state.isLoggedIn ? (\n                            <div\n                                className='nav-item ml-auto '\n                                style={{ fontSize: '1.5rem' }}\n                            >\n                                Welcome, {context.state.user.username}\n                            </div>\n                        ) : null}\n                        {context.state.isLoggedIn ? this.collectionLink : null}\n                        {context.state.isLoggedIn\n                            ? this.logoutLink\n                            : this.loginLink}\n                    </nav>\n                )}\n            </Consumer>\n        );\n    }\n}\n\nHeader.contextType = GlobalContext;\n\nHeader.protoTypes = {\n    loggedIn: PropTypes.bool.isRequired,\n    handleLogout: PropTypes.func.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { GlobalContext } from './Context';\n\nclass SignupForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: null,\n            err: null,\n            username: '',\n            password1: '',\n            password2: ''\n        };\n    }\n    handleChange = e => {\n        this.setState({ ...this.state, [e.target.name]: e.target.value });\n    };\n    handleSubmit = async (e, setUser) => {\n        e.preventDefault();\n        this.setState({ ...this.state, info: 'Sending...' });\n        if (\n            this.state.username.trim() === '' ||\n            this.state.password1.trim() === '' ||\n            this.state.password2.trim() === ''\n        ) {\n            return this.setState({\n                ...this.state,\n                err: 'Please Fill All Details'\n            });\n        }\n        if (this.state.password1 !== this.state.password2) {\n            return this.setState({\n                ...this.state,\n                err: 'Passwords Does not Match'\n            });\n        }\n        try {\n            let res = await axios.post('/api/user/register', {\n                username: this.state.username,\n                password: this.state.password1\n            });\n            this.setState({\n                username: '',\n                password1: '',\n                password2: '',\n                err: null,\n                info: 'Sucessful!'\n            });\n            this.context.setUser(res.data.user);\n            this.props.history.push('/');\n        } catch (error) {\n            return this.setState({\n                ...this.state,\n                info: null,\n                err: error.response ? error.response.data.err : error.message\n            });\n        }\n    };\n\n    render() {\n        let errMsg = null;\n        let info = null;\n        if (this.state.err !== null) {\n            errMsg = (\n                <div className=' p-2 mb-3 rounded bg-danger text-white text-center'>\n                    {this.state.err}\n                </div>\n            );\n        }\n        if (this.state.info !== null) {\n            info = (\n                <div className=' p-2 mb-3 rounded bg-info text-white text-center'>\n                    <h3>{this.state.info}</h3>\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div\n                    className='d-md-flex p-5 mb-5'\n                    style={{ backgroundColor: '#F2F1F1' }}\n                >\n                    <form onSubmit={this.handleSubmit}>\n                        <div className='mb-3 text-center'>\n                            <h2>Register</h2>\n                        </div>\n                        {info}\n                        {errMsg}\n                        <div className='form-group'>\n                            <label>Username</label>\n                            <input\n                                className='form-control'\n                                type='text'\n                                name='username'\n                                value={this.state.username}\n                                onChange={this.handleChange}\n                            />\n                            <small className='form-text text-muted'>\n                                Usename Should be unique\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <label>Password</label>\n                            <input\n                                className='form-control'\n                                type='password'\n                                name='password1'\n                                value={this.state.password1}\n                                onChange={this.handleChange}\n                            />\n                            <small className='form-text text-muted'>\n                                Use a Strong password!\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <label>Confirm Password</label>\n                            <input\n                                className='form-control'\n                                type='password'\n                                name='password2'\n                                value={this.state.password2}\n                                onChange={this.handleChange}\n                            />\n                            <small className='form-text text-muted'>\n                                Just Checking...!\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <input\n                                type='submit'\n                                className='btn btn-primary'\n                                value='Register'\n                            />\n                        </div>\n                    </form>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nSignupForm.contextType = GlobalContext;\n\nexport default withRouter(SignupForm);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { GlobalContext } from './Context';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: null,\n            err: null,\n            username: '',\n            password: ''\n        };\n    }\n\n    handleChange = e => {\n        this.setState({ ...this.state, [e.target.name]: e.target.value });\n    };\n    handleSubmit = async e => {\n        e.preventDefault();\n        this.setState({ ...this.state, info: 'Sending...' });\n        if (\n            this.state.username.trim() === '' ||\n            this.state.password.trim() === ''\n        ) {\n            return this.setState({\n                ...this.state,\n                err: 'Please Fill All Details'\n            });\n        }\n        try {\n            let res = await axios.post('/api/user/login', {\n                username: this.state.username,\n                password: this.state.password\n            });\n            this.setState({\n                username: '',\n                password: '',\n                err: null,\n                info: 'Sucessful!'\n            });\n\n            this.context.setUser(res.data.user);\n            this.props.history.push('/');\n        } catch (error) {\n            return this.setState({\n                ...this.state,\n                info: null,\n                err: error.response ? error.response.data.err : error.message\n            });\n        }\n    };\n\n    render() {\n        let errMsg = null;\n        let info = null;\n        if (this.state.err !== null) {\n            errMsg = (\n                <div className=' p-2 mb-3 rounded bg-danger text-white text-center'>\n                    {this.state.err}\n                </div>\n            );\n        }\n        if (this.state.info !== null) {\n            info = (\n                <div className=' p-2 mb-3 rounded bg-info text-white text-center'>\n                    <h3>{this.state.info}</h3>\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div\n                    className='d-md-flex p-5 mb-5'\n                    style={{ backgroundColor: '#F2F1F1' }}\n                >\n                    <form onSubmit={this.handleSubmit}>\n                        <div className='mb-3 text-center'>\n                            <h2>Log IN</h2>\n                        </div>\n                        {info}\n                        {errMsg}\n                        <div className='form-group'>\n                            <label>Username</label>\n                            <input\n                                className='form-control'\n                                type='text'\n                                name='username'\n                                value={this.state.username}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label>Password</label>\n                            <input\n                                className='form-control'\n                                type='password'\n                                name='password'\n                                value={this.state.password1}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className='p-5'></div>\n                        <div className='p-4'></div>\n                        <div className='form-group'>\n                            <input\n                                type='submit'\n                                className='btn btn-primary'\n                                value='Log In'\n                            />\n                        </div>\n                    </form>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nLoginForm.contextType = GlobalContext;\nexport default withRouter(LoginForm);\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport SignupForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nclass LoginSignup extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Header></Header>\n                <div className='container mt-5'>\n                    <div className='d-md-flex flex-row mb-3 justify-content-around'>\n                        <SignupForm></SignupForm>\n                        <LoginForm></LoginForm>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default LoginSignup;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Image extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { source: '' };\n    }\n\n    componentDidMount() {\n        axios\n            .get(this.props.path, { responseType: 'arraybuffer' })\n            .then(response => {\n                const base64 = btoa(\n                    new Uint8Array(response.data).reduce(\n                        (data, byte) => data + String.fromCharCode(byte),\n                        ''\n                    )\n                );\n                this.setState({ source: 'data:;base64,' + base64 });\n            })\n            .catch(err => {\n                console.log(err.response);\n            });\n    }\n    render() {\n        let classname = this.props.thumbnail\n            ? 'card-img-top img-thumbnail'\n            : 'img-fluid';\n        let style = this.props.thumbnail ? { height: '12rem' } : {};\n        return (\n            <img\n                className={classname}\n                style={style}\n                src={this.state.source}\n                alt={this.props.alt}\n            />\n        );\n    }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\nimport Image from './Image';\nimport { Link } from 'react-router-dom';\nimport { GlobalContext } from './Context';\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { file: props.file };\n    }\n    deleteFile = () => {\n        this.context.deleteFile(this.state.file);\n    };\n\n    getSizeText = size => {\n        if (size / 1024 < 1) {\n            return size + ' Bytes';\n        } else if (size / (1024 * 1024) < 1) {\n            return Math.ceil(size / 1024) + ' KBs';\n        } else if (size / (1024 * 1024 * 1024) < 1) {\n            //* Actually not needed in this version as the maximum upload size per user is ideally less than 20MB,\n            return Math.ceil(size / (1024 * 1024)) + ' MBs'; //* so this can be replace by a default return instead of else if clause, but else if is used in case of\n        } //* increased storage size is allowed.\n    };\n\n    render() {\n        let file = this.state.file;\n        return (\n            <div className='card h-100'>\n                {file.ext === 'jpeg' ||\n                file.ext === 'png' ||\n                file.ext === 'jpg' ? (\n                    <Image\n                        path={`/api/files/${file.dbfilename}`}\n                        thumbnail={true}\n                        alt={file.originalname}\n                    />\n                ) : null}\n                <div className='card-body'>\n                    <h5 className='card-title'>{file.originalname}</h5>\n                    <p>\n                        Size : {this.getSizeText(file.size)}\n                        <br />\n                        Uploaded on :{new Date(file.date).toDateString()}\n                    </p>\n\n                    <Link\n                        style={{ width: '100%' }}\n                        className='btn btn-primary m-1'\n                        to={{\n                            pathname: `/file/${file.dbfilename}`,\n                            state: { file: file }\n                        }}\n                    >\n                        Open in Browser\n                    </Link>\n                    <Link\n                        style={{ width: '100%' }}\n                        className='btn btn-success m-1'\n                        to={`/api/download/${file.dbfilename}`}\n                        target='_blank'\n                        download={file.originalname}\n                    >\n                        Download\n                    </Link>\n                    {!this.props.collection ? (\n                        <Link\n                            style={{ width: '100%' }}\n                            className='btn btn-danger m-1'\n                            to='/'\n                            onClick={this.deleteFile}\n                        >\n                            Delete\n                        </Link>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nCard.contextType = GlobalContext;\nexport default Card;\n","import React, { Component } from 'react';\n\nimport Card from './Card';\nimport { GlobalContext, Consumer } from './Context';\nclass CardView extends Component {\n    render() {\n        return (\n            <Consumer>\n                {context => (\n                    <div className='row m-2'>\n                        {context.state.user.files.map(file => (\n                            <div\n                                key={file.dbfilename}\n                                className='col-sm-6 col-md-4 col-lg-4 my-2'\n                            >\n                                <Card file={file} collection={false} />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </Consumer>\n        );\n    }\n}\n\nCardView.contextType = GlobalContext;\nexport default CardView;\n","import React, { Component } from 'react';\nimport { GlobalContext } from './Context';\nimport CardView from './CardView';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport $ from 'jquery';\nimport { Redirect } from 'react-router-dom';\n\nclass UserPage extends Component {\n    state = {\n        files: null,\n        info: null\n    };\n\n    componentDidMount() {\n        bsCustomFileInput.init();\n    }\n    fileAddHandler = e => {\n        let totalSize = 0;\n        for (let x = 0; x < e.target.files.length; x++) {\n            totalSize += e.target.files.size;\n        }\n\n        if (totalSize > 20000000 - this.context.state.user.usedSpace) {\n            let errStr = `Cannot upload as these new files will exceed your allowed space...\\ncurrent used space : ${this\n                .context.state.user.usedSpace /\n                1000000} out of 20MB\\nSize of Intended Upload : ${totalSize /\n                1000000}`;\n            return this.setState({ ...this.state, info: errStr });\n        }\n        this.setState({\n            ...this.state,\n            input: e.target,\n            info: null,\n            files: e.target.files\n        });\n    };\n    submitFiles = async e => {\n        const data = new FormData();\n        if (this.state.files === null) {\n            return this.setState({\n                ...this.state,\n                info: 'Please Select Files'\n            });\n        }\n\n        for (let x = 0; x < this.state.files.length; x++) {\n            data.append('files', this.state.files[x]);\n        }\n        $.ajax({\n            type: 'POST',\n            url: '/api/upload/files',\n            xhrFields: {\n                withCredentials: true\n            },\n            data: data,\n            contentType: false,\n            processData: false,\n            cache: false,\n            success: res => {\n                this.setState({\n                    info: 'Successfully uploaded',\n                    files: res.files,\n                    key: Date.now()\n                });\n\n                this.context.addFiles(res.files);\n                let input = this.state.input;\n                input.value = '';\n                setTimeout(() => {\n                    this.setState({\n                        ...this.state,\n                        info: null,\n                        input: input\n                    });\n                }, 500);\n            },\n            error: e => {\n                let errStr = e.responseJSON ? e.responseJSON.err : null;\n                console.log(e);\n                this.setState({\n                    ...this.state,\n                    info: errStr || 'Unknown Error Occurred'\n                });\n            }\n        });\n    };\n\n    inputForm = (\n        <div>\n            <div className='input-group'>\n                <div className='custom-file'>\n                    <input\n                        type='file'\n                        multiple\n                        formEncType='multipart/form-data'\n                        className='custom-file-input'\n                        id='inputGroupFile04'\n                        aria-describedby='inputGroupFileAddon04'\n                        onChange={this.fileAddHandler}\n                    />\n                    <label\n                        className='custom-file-label'\n                        htmlFor='inputGroupFile04'\n                    >\n                        Choose file\n                    </label>\n                </div>\n                <div className='input-group-append'>\n                    <button\n                        className='btn btn-success'\n                        type='button'\n                        id='inputGroupFileAddon04'\n                        onClick={this.submitFiles}\n                    >\n                        Upload\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n\n    render() {\n        let info = null;\n        if (this.state.info !== null) {\n            info = (\n                <div className=' p-2 mb-3 mt-2 rounded bg-info text-white text-center'>\n                    {this.state.info}\n                </div>\n            );\n        }\n        let display = null;\n        if (this.context.state.isLoggedIn) {\n            display = (\n                <div className='container mt-3'>\n                    {this.inputForm}\n                    {info}\n                    {this.context.state.user.files ? <CardView /> : null}\n                </div>\n            );\n        } else {\n            display = <Redirect to='/' />;\n        }\n\n        return <React.Fragment>{display}</React.Fragment>;\n    }\n}\n\nUserPage.contextType = GlobalContext;\nexport default UserPage;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport { GlobalContext, Consumer } from './Context';\nimport UserPage from './UserPage';\n\nclass Home extends Component {\n    staticText = (\n        <div className='container mt-5 '>\n            <h4>\n                FileStore is a cloud file storing and sharing platform. It uses\n                Atlas MongoDB to store and Share Files.\n            </h4>\n            <h5>\n                This is a small scale project done using ExpressJs Backend,\n                ReactJs frontend Mongoose ODM,Bootstrap Css\n            </h5>\n            <h5>\n                Log in to Store your files. Files can be stored in two ways : in\n                Personal Account, Which can be accessed only by the user\n                uploading it, and in Collections, which can be Shared and viewed\n                by others.\n            </h5>\n            <h5>\n                A single User can have 20MB of files in private , and any\n                collection can have Maximum of 20MB of files in it.\n            </h5>\n            <br />\n            <h5>\n                There are still many bugs and feature updates possible. Few of\n                them are :\n                <br />\n                <br />\n                <ul>\n                    <li>\n                        The File upload does not clear itself after uploading\n                        files, even though there are no Files still assosiated\n                        with it .\n                    </li>\n                    <br />\n                    <li>\n                        The Collections are static, as in once created and\n                        uploaded, files cannot be added or removed from\n                        them.This was not done as the collection files are\n                        showed on same route for all viewers, logged in as well\n                        as not. The logic to check whether a collection belongs\n                        to current logged in user , so only creater can have\n                        update rights was becoming complecated.\n                    </li>\n                    <br />\n                    <li>\n                        The npm package 'react-file-viewer' used to display some\n                        file types does not scale the pages of pdf well, which\n                        is an internal issue of package.\n                    </li>\n                    <br />\n                    <li>\n                        The GridFS-Stream package used in the backend uses\n                        outdated drivers,and thus does not support some updated\n                        methods of mongoDB. A possible solution would be to\n                        change the package used or create a custom interface\n                        over MongoDB Grid interface.\n                    </li>\n                    <br />\n                    <li>\n                        The Backend cannot currently limit incoming files in\n                        uploading other than the size less than 20MB. Thus a\n                        user may extend the allowed space by using REST clients\n                        such as Postman to upload files. This may be stopped\n                        using cors. Currently the file size per user is checked\n                        and handled by frontend before upload.\n                    </li>\n                </ul>\n            </h5>\n            <h5>\n                Check the Github Repository here :{' '}\n                <a href='https://github.com/YJDoc2/FileStore-Web-Project'>\n                    FileStore Github Repository\n                </a>\n            </h5>\n        </div>\n    );\n    render() {\n        return (\n            <Consumer>\n                {context => (\n                    <React.Fragment>\n                        <Header></Header>\n                        {context.state.isLoggedIn ? (\n                            <UserPage />\n                        ) : (\n                            this.staticText\n                        )}\n                    </React.Fragment>\n                )}\n            </Consumer>\n        );\n    }\n}\n\nHome.contextType = GlobalContext;\n\nexport default Home;\n","import React from 'react';\n\nconst UnsupportedFileType = props => {\n    return (\n        <React.Fragment>\n            <div className='container mt-3'>\n                Sorry, We do not support {props.fileType} for in-browser Display\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default UnsupportedFileType;\n","import React, { Component } from 'react';\nimport FileViewer from 'react-file-viewer';\nimport path from 'path';\nimport Header from './Header';\nimport Image from './Image';\nimport UnsupportedFileType from './UnsupportedFiletype';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport { GlobalContext } from './Context';\nimport Axios from 'axios';\n\nclass FileView extends Component {\n    constructor(props) {\n        super(props);\n        const { filename } = this.props.match.params;\n        const { file } = this.props.location.state;\n\n        this.state = {\n            filename: filename,\n            file: file,\n            img: null\n        };\n    }\n    componentDidMount() {\n        let ext = path\n            .extname(this.state.filename)\n            .toLowerCase()\n            .substring(1);\n        const textExt = /txt|html|htm|css|js|json|c|cpp|java|py|sh/;\n        if (ext === 'png' || ext === 'jpeg' || ext === 'jpg') {\n            let img = (\n                <Image\n                    path={`/api/files/${this.state.filename}`}\n                    thumbnail={false}\n                    alt={this.state.file.originalname}\n                ></Image>\n            );\n            this.setState({ ...this.state, img: img });\n        } else if (textExt.test(ext)) {\n            Axios.get(`/api/files/${this.state.filename}`)\n                .then(res => {\n                    let lines = res.data.split(/\\r\\n|\\r|\\n/).length;\n\n                    this.setState({\n                        ...this.state,\n                        text: (\n                            <textarea\n                                className='w-100'\n                                value={res.data}\n                                readOnly={true}\n                                rows={lines * 1.5} //* 1.5 is multiplied as then the no. of lines will be slightly more than actuall no. of lines\n                                //* to accomodate for lines overflowing.\n\n                                style={{ resize: 'none', border: 'none' }}\n                            ></textarea>\n                        )\n                    });\n                })\n                .catch(e => {\n                    if (e.response.data.err) {\n                        this.setState({\n                            ...this.state,\n                            info: e.response.data.err\n                        });\n                    }\n                    console.log(e);\n                });\n        } else {\n            let fView = (\n                <FileViewer\n                    fileType={ext}\n                    filePath={`/api/files/${this.state.filename}`}\n                    unsupportedComponent={UnsupportedFileType}\n                />\n            );\n            this.setState({ ...this.state, fView: fView });\n        }\n    }\n\n    staticComponents = () => {\n        return (\n            <React.Fragment>\n                <Header></Header>\n                <div className='d-flex justify-content-between m-2'>\n                    <button\n                        className='btn btn-primary btn-lg'\n                        onClick={this.props.history.goBack}\n                    >\n                        Back\n                    </button>\n\n                    <h2>{this.state.file.originalname}</h2>\n\n                    <div></div>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        let display;\n\n        if (\n            this.state.filename.substring(0, 4) === 'coll' ||\n            (this.context.state.isLoggedIn &&\n                this.context.state.user.files.some(file => {\n                    return file.dbfilename === this.state.filename;\n                }))\n        ) {\n            display = (\n                <React.Fragment>\n                    {this.staticComponents()}\n                    {this.state.info}\n                    <div className='container w-100 mt-2 text-center'>\n                        {this.state.img}\n                        {this.state.text}\n                        {this.state.fView}\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            display = <Redirect to='/' />;\n        }\n\n        return <React.Fragment>{display}</React.Fragment>;\n    }\n}\nFileView.contextType = GlobalContext;\nexport default withRouter(FileView);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GlobalContext } from './Context';\n\nclass CollectionCard extends Component {\n    state = {};\n    deleteCollection = () => {\n        this.context.deleteCollection(this.props.name);\n    };\n    render() {\n        let name = this.props.name;\n        let colls = this.context.state.user.collections;\n        let sampleElem = colls[0];\n        let num = colls.filter(coll => coll.name === name).length;\n\n        return (\n            <div className='card h-100'>\n                <div className='card-body'>\n                    <h5 className='card-title'>{name}</h5>\n                    <p>\n                        Number of Files : {num}\n                        <br />\n                        Uploaded on :{new Date(sampleElem.date).toDateString()}\n                    </p>\n\n                    <Link\n                        style={{ width: '100%' }}\n                        className='btn btn-primary m-1'\n                        to={{\n                            pathname: `/collection/${name}`\n                        }}\n                    >\n                        View\n                    </Link>\n\n                    <button\n                        style={{ width: '100%' }}\n                        className='btn btn-danger m-1'\n                        onClick={this.deleteCollection}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nCollectionCard.contextType = GlobalContext;\nexport default CollectionCard;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport $ from 'jquery';\nimport { Link, Redirect } from 'react-router-dom';\nimport { GlobalContext } from './Context';\nimport CollectionCard from './CollectionCard';\n\nclass CollectionPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            files: null\n        };\n    }\n\n    componentDidMount() {\n        bsCustomFileInput.init();\n    }\n    fileAddHandler = e => {\n        let totalSize = 0;\n        for (let x = 0; x < e.target.files.length; x++) {\n            totalSize += e.target.files.size;\n        }\n\n        if (totalSize > 20000000) {\n            let errStr = `Cannot upload as Maximum allowed space for a single collection is 20MB`;\n            return this.setState({ ...this.state, info: errStr });\n        }\n        this.setState({\n            ...this.state,\n            input: e.target,\n            info: null,\n            files: e.target.files\n        });\n    };\n    submitFiles = async e => {\n        const data = new FormData();\n        if (this.state.files === null) {\n            return this.setState({\n                ...this.state,\n                info: 'Please Select Files'\n            });\n        }\n\n        for (let x = 0; x < this.state.files.length; x++) {\n            data.append('files', this.state.files[x]);\n        }\n        $.ajax({\n            type: 'POST',\n            url: `/api/upload/collection/${this.state.name}`,\n            xhrFields: {\n                withCredentials: true\n            },\n            data: data,\n            contentType: false,\n            processData: false,\n            cache: false,\n            success: res => {\n                this.setState({\n                    info: 'Successfully uploaded',\n                    files: res.files,\n                    key: Date.now()\n                });\n\n                this.context.addCollection(res.files);\n                setTimeout(() => {\n                    this.setState({ ...this.state, info: null });\n                }, 500);\n            },\n            error: e => {\n                let errStr = e.responseJSON ? e.responseJSON.err : null;\n                console.log(e);\n                this.setState({\n                    ...this.state,\n                    info: errStr || 'Unknown Error Occurred'\n                });\n            }\n        });\n    };\n\n    handleChange = e => {\n        this.setState({ ...this.state, [e.target.name]: e.target.value });\n    };\n\n    inputForm = (\n        <div>\n            <div className='input-group'>\n                <div className='custom-file'>\n                    <input\n                        type='file'\n                        multiple\n                        formEncType='multipart/form-data'\n                        className='custom-file-input'\n                        id='inputGroupFile04'\n                        aria-describedby='inputGroupFileAddon04'\n                        onChange={this.fileAddHandler}\n                    />\n                    <label\n                        className='custom-file-label'\n                        htmlFor='inputGroupFile04'\n                    >\n                        Choose file\n                    </label>\n                </div>\n                <div className='input-group-append'>\n                    <button\n                        className='btn btn-success'\n                        type='button'\n                        id='inputGroupFileAddon04'\n                        onClick={this.submitFiles}\n                    >\n                        Upload\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n\n    render() {\n        let cols;\n        if (this.context.state.isLoggedIn) {\n            cols = new Set();\n            this.context.state.user.collections.forEach(coll => {\n                cols.add(coll.name);\n            });\n        }\n        return (\n            <div>\n                {this.context.state.isLoggedIn ? (\n                    <React.Fragment>\n                        <Header></Header>\n                        {this.state.info}\n                        <div className='container'>\n                            <Link\n                                to='/'\n                                className='btn btn-primary btn-block mt-2'\n                            >\n                                Home\n                            </Link>\n                        </div>\n                        <div className='container mt-5'>\n                            <div className='form-group'>\n                                <label>Collection Name : </label>\n                                <input\n                                    className='form-control'\n                                    type='text'\n                                    name='name'\n                                    value={this.state.name}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n                            {this.inputForm}\n                        </div>\n\n                        <div className='container mt-5'>\n                            <div className='row m-2'>\n                                {Array.from(cols).map(coll => {\n                                    return (\n                                        <div\n                                            key={coll}\n                                            className='col-sm-6 col-md-4 col-lg-4 my-2'\n                                        >\n                                            <CollectionCard name={coll} />\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                    <Redirect to='/' />\n                )}\n            </div>\n        );\n    }\n}\n\nCollectionPage.contextType = GlobalContext;\nexport default CollectionPage;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Card from './Card';\nimport Axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass CollectionView extends Component {\n    constructor(props) {\n        super(props);\n        const { name } = this.props.match.params;\n\n        this.state = {\n            name: name,\n            createrName: '',\n            files: null,\n            noColl: false\n        };\n    }\n    componentDidMount() {\n        Axios.get(`/api/collection/${this.state.name}`)\n            .then(res => {\n                let collection = res.data.collection;\n                let creater = collection.creater;\n\n                this.setState({\n                    ...this.state,\n                    createrName: creater,\n                    files: collection.files\n                });\n            })\n            .catch(e => {\n                console.log(e);\n                if (!e.response.data.success) {\n                    this.setState({ ...this.state, noColl: true });\n                }\n            });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header></Header>\n                {this.state.noColl ? (\n                    <div className='container mt-2 text-center'>\n                        <h1>\n                            Sorry, No collection With name '{this.state.name}'\n                            Exists.\n                        </h1>\n                    </div>\n                ) : (\n                    <div className='container mt-2 text-center'>\n                        <div className='d-flex justify-content-between '>\n                            <button\n                                className='btn btn-primary  px-2'\n                                onClick={this.props.history.goBack}\n                            >\n                                Back\n                            </button>\n                            <div>\n                                <h2>Collection {this.state.name}</h2>\n                                <h4>Created by : {this.state.createrName}</h4>\n                            </div>\n                            <div></div>\n                        </div>\n\n                        {this.state.files ? (\n                            <div className='row m-2'>\n                                {this.state.files.map(file => (\n                                    <div\n                                        key={file.dbfilename}\n                                        className='col-sm-6 col-md-4 col-lg-4 my-2'\n                                    >\n                                        <Card\n                                            file={file}\n                                            collection={true}\n                                            collName={this.state.name}\n                                        />\n                                    </div>\n                                ))}\n                            </div>\n                        ) : null}\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(CollectionView);\n","import React from 'react';\nimport Header from './Header';\nconst ErrorPage = () => {\n    return (\n        <React.Fragment>\n            <Header></Header>\n            <div className='container mt-2'>\n                <h1>Sorry, We cant find what you are Looking for...</h1>\n                <h3>Please check the URL...</h3>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ErrorPage;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport LoginSignup from './LoginSignup';\nimport Home from './Home';\nimport FileView from './FileView';\nimport Axios from 'axios';\nimport { Provider } from './Context';\nimport CollectionPage from './CollectionPage';\nimport CollectionView from './CollectionView';\nimport ErrorPage from './404ErrorPage';\n\nclass RootRouter extends Component {\n    state = {\n        user: null,\n        isLoggedIn: false\n    };\n\n    componentDidMount() {\n        Axios.defaults.withCredentials = true;\n    }\n    addFiles = files => {\n        let user = this.state.user;\n        user.files.push(...files);\n        this.setState({ user: user, isLoggedIn: true });\n    };\n    addCollection = files => {\n        let user = this.state.user;\n        user.collections.push(...files);\n        this.setState({ user: user, isLoggedIn: true });\n    };\n    deleteCollection = async name => {\n        try {\n            let res = await Axios.delete(`/api/collection/${name}`);\n            this.setUser(res.data.user);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    setUser = user => {\n        if (user === null || user === undefined) {\n            return this.logout();\n        }\n        this.setState({ user: user, isLoggedIn: true });\n    };\n    logout = () => {\n        this.setState({ user: null, isLoggedIn: false });\n    };\n    deleteFile = async file => {\n        try {\n            let res = await Axios.delete(`/api/files/${file.dbfilename}`);\n            this.setUser(res.data.user);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    render() {\n        return (\n            <Provider\n                value={{\n                    state: this.state,\n                    setUser: this.setUser,\n                    logout: this.logout,\n                    addFiles: this.addFiles,\n                    deleteFile: this.deleteFile,\n                    addCollection: this.addCollection,\n                    deleteCollection: this.deleteCollection\n                }}\n            >\n                <Router>\n                    <Switch>\n                        <Route exact path='/' component={Home} />\n                        <Route exact path='/login' component={LoginSignup} />\n                        <Route\n                            exact\n                            path='/file/:filename'\n                            component={FileView}\n                        />\n                        <Route\n                            exact\n                            path='/collection/:name'\n                            component={CollectionView}\n                        />\n                        <Route\n                            exact\n                            path='/collections'\n                            component={CollectionPage}\n                        />\n                        <Route component={ErrorPage} />\n                    </Switch>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default RootRouter;\n","import React from 'react';\nimport './App.css';\nimport RootRouter from './components/RootRouter';\n\nfunction App() {\n    return <RootRouter />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App></App>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}